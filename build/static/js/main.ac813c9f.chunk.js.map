{"version":3,"sources":["components/CityInput.js","components/WeatherDescription.js","components/WeatherIcons.js","components/Temperature.js","components/Greeting.js","components/WeatherContainer.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["CityInput","props","onSubmit","submitHandler","className","onChange","changeHandler","type","placeholder","WeatherDescription","description","IconsContainer","apiIcon","Temperature","fahrenheit","celsius","Greeting","message","kelvinToCelsius","k","Math","round","WeatherContainer","weather","name","toUpperCase","WeatherIcons","icon","main","temp","userTime","Footer","href","target","rel","App","useState","cityName","setCityName","setWeather","e","value","preventDefault","result","cityList","find","el","toLowerCase","axios","get","id","then","res","data","Date","getHours","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.ac813c9f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst CityInput = props => (\n  <form onSubmit={props.submitHandler} className=\"mb-12 flex\">\n    <input onChange={props.changeHandler} type=\"text\" placeholder=\"your city\" />\n    <button type=\"submit\" className=\"ml-5\">\n      enter\n    </button>\n  </form>\n);\n\nexport default CityInput;\n","import React from \"react\";\n\nconst WeatherDescription = props => (\n  <p className=\"weather-condition mb-4 text-sm\">{props.description}</p>\n);\n\nexport default WeatherDescription;\n","import React from \"react\";\n\nconst IconsContainer = props => (\n  <div className=\"flex justify-center mb-4\">\n    {props.apiIcon === \"01n\" ? (\n      <i className=\"fad fa-moon-stars fa-4x p-2\" />\n    ) : props.apiIcon === \"01d\" ? (\n      <i className=\"fad fa-sun fa-4x p-2\" />\n    ) : (\n      <i className=\"fal fa-sun fa-4x p-2\" />\n    )}\n\n    {props.apiIcon === \"02n\" ? (\n      <i className=\"fad fa-clouds-moon fa-4x p-2\" />\n    ) : props.apiIcon === \"02d\" ? (\n      <i className=\"fad fa-cloud-sun fa-4x p-2\" />\n    ) : (\n      <i className=\"fal fa-cloud-sun fa-4x p-2\" />\n    )}\n\n    {props.apiIcon === \"03d\" ||\n    props.apiIcon === \"03n\" ||\n    props.apiIcon === \"04d\" ||\n    props.apiIcon === \"04n\" ? (\n      <i className=\"fad fa-clouds fa-4x p-2\" />\n    ) : (\n      <i className=\"fal fa-clouds fa-4x p-2\" />\n    )}\n\n    {props.apiIcon === \"01d\" ||\n    props.apiIcon === \"01n\" ||\n    props.apiIcon === \"02d\" ||\n    props.apiIcon === \"02n\" ||\n    props.apiIcon === \"03d\" ||\n    props.apiIcon === \"03n\" ||\n    props.apiIcon === \"04d\" ||\n    props.apiIcon === \"04n\" ? (\n      <i className=\"fal fa-cloud-drizzle fa-4x p-2\" />\n    ) : null}\n\n    {props.apiIcon === \"09d\" || props.apiIcon === \"09n\" ? (\n      <i className=\"fad fa-cloud-drizzle fa-4x p-2\" />\n    ) : null}\n\n    {props.apiIcon === \"10d\" || props.apiIcon === \"10n\" ? (\n      <i className=\"fad fa-cloud-showers-heavy fa-4x p-2\" />\n    ) : null}\n\n    {props.apiIcon === \"11d\" || props.apiIcon === \"11n\" ? (\n      <i className=\"fad fa-thunderstorm fa-4x p-2\" />\n    ) : null}\n\n    {props.apiIcon === \"13d\" || props.apiIcon === \"13n\" ? (\n      <i className=\"fad fa-cloud-snow fa-4x p-2\" />\n    ) : null}\n\n    {props.apiIcon === \"50d\" || props.apiIcon === \"50n\" ? (\n      <i className=\"fad fa-fog fa-4x p-2\" />\n    ) : null}\n  </div>\n);\n\nexport default IconsContainer;\n","import React from \"react\";\n\nconst Temperature = props => (\n  <div className=\"flex justify-center\">\n    <span className=\"temperature\">{props.fahrenheit}</span>\n    <span className=\"courier\">•F/</span>\n    <span className=\"temperature\">{props.celsius}</span>\n    <span className=\"courier\">•C</span>{\" \"}\n  </div>\n);\n\nexport default Temperature;\n","import React from \"react\";\n\nconst Greeting = props => <p>{props.message}</p>;\n\nexport default Greeting;\n","import React from \"react\";\nimport WeatherDescription from \"./WeatherDescription\";\nimport WeatherIcons from \"./WeatherIcons\";\nimport Temperature from \"./Temperature\";\nimport Greeting from \"./Greeting\";\n\nconst kelvinToFahrenheit = k => {\n  return Math.round(((k - 273.15) * 1.8 + 32) * 10) / 10;\n};\n\nconst kelvinToCelsius = k => {\n  return Math.round((k - 273.15) * 10) / 10;\n};\n\nconst WeatherContainer = props => (\n  <>\n    <h1 className=\"underline font-bold text-xl\">\n      {props.weather.name.toUpperCase()} WEATHER\n    </h1>\n\n    <WeatherDescription description={props.weather.weather[0].description} />\n\n    <div className=\"flex justify-around\">\n      <WeatherIcons apiIcon={props.weather.weather[0].icon} />\n    </div>\n\n    <Temperature\n      fahrenheit={kelvinToFahrenheit(props.weather.main.temp)}\n      celsius={kelvinToCelsius(props.weather.main.temp)}\n    />\n\n    {props.userTime >= 18 || props.userTime <= 4 ? (\n      <Greeting message=\"Good night and sweet seafaring dreams\" />\n    ) : (\n      <Greeting />\n    )}\n  </>\n);\n\nexport default WeatherContainer;\n","import React from \"react\";\n\nconst Footer = () => (\n  <div className=\"flex justify-center -mt-8\">\n    <a\n      href=\"https://www.linkedin.com/in/superhackerman/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"pr-4\"\n    >\n      <i\n        className=\"fab fa-linkedin-in Class\tSize\nfa-lg\"\n      />\n    </a>\n\n    <a\n      href=\"https://github.com/superhackerboy/sweet-seafaring-dreams\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <i\n        className=\"fab fa-github Class\tSize\nfa-lg\"\n      />\n    </a>\n  </div>\n);\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport CityInput from \"./components/CityInput\";\nimport WeatherContainer from \"./components/WeatherContainer\";\nimport Footer from \"./components/Footer\";\nimport cityList from \"./cityList\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [cityName, setCityName] = useState(\"\");\n  const [weather, setWeather] = useState(null);\n  // const [weather, setWeather] = useState({\n  //   coord: {\n  //     lon: -84.8,\n  //     lat: 34.17\n  //   },\n  //   weather: [\n  //     {\n  //       id: 804,\n  //       main: \"\",\n  //       description: \"poopy pants\",\n  //       icon: \"04n\"\n  //     }\n  //   ],\n  //   base: \"stations\",\n  //   main: {\n  //     temp: 284.43,\n  //     feels_like: 280.64,\n  //     temp_min: 281.48,\n  //     temp_max: 286.15,\n  //     pressure: 1014,\n  //     humidity: 70\n  //   },\n  //   visibility: 11265,\n  //   wind: {\n  //     speed: 4.1,\n  //     deg: 290\n  //   },\n  //   clouds: {\n  //     all: 90\n  //   },\n  //   dt: 1582742037,\n  //   sys: {\n  //     type: 1,\n  //     id: 5432,\n  //     country: \"US\",\n  //     sunrise: 1582719148,\n  //     sunset: 1582759933\n  //   },\n  //   timezone: -18000,\n  //   id: 4186531,\n  //   name: \"Cartersville\",\n  //   cod: 200\n  // });\n  const apiKey = \"14715648d5b5f1ec6117655c97b891de\";\n\n  const getTime = () => {\n    return new Date().getHours();\n  };\n\n  const changeHandler = e => {\n    setCityName(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const result = cityList.find(\n      // gets city code from citList.json\n      el => el.name.toLowerCase() === cityName.toLowerCase()\n    );\n\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?id=${result.id}&appid=${apiKey}`\n      )\n      .then(res => {\n        setWeather(res.data);\n        return res;\n      });\n  };\n\n  return (\n    <>\n      <div className=\"flex justify-center items-center flex-col h-screen\">\n        <CityInput\n          changeHandler={changeHandler}\n          submitHandler={submitHandler}\n        />\n        {weather === null ? null : (\n          <WeatherContainer weather={weather} userTime={getTime()} />\n        )}\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}